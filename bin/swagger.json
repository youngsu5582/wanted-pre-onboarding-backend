{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local Server"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "wanted-pre-onboarding-backend",
    "description": "",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/post": {
      "post": {
        "tags": [
          "post"
        ],
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostProps"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "게시글 작성 기능\n\nBody 를 통해 받은 createPostProps( title , content )를 통해 Post를 만든다",
        "description": "게시글 작성 기능\n\nBody 를 통해 받은 createPostProps( title , content )를 통해 Post를 만든다.\n\n@tag post\n@param createPostProps\n@param userId\n@returns",
        "x-nestia-namespace": "post.create",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "post",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "createPostProps",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "userId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "POST"
      },
      "get": {
        "tags": [
          "post"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "description": "@minimum 0",
              "x-typia-metaTags": [
                {
                  "kind": "minimum",
                  "value": 0
                }
              ],
              "x-typia-jsDocTags": [
                {
                  "name": "minimum",
                  "text": [
                    {
                      "text": "0",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "number",
              "minimum": 0
            },
            "required": false,
            "description": "@minimum 0"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "description": "@minimum 0",
              "x-typia-metaTags": [
                {
                  "kind": "minimum",
                  "value": 0
                }
              ],
              "x-typia-jsDocTags": [
                {
                  "name": "minimum",
                  "text": [
                    {
                      "text": "0",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "number",
              "minimum": 0
            },
            "required": false,
            "description": "@minimum 0"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "x-typia-required": false,
              "x-typia-optional": true,
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_lt_PostsResult_gt_"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "게시글 목록 조회 기능\n\nQuery 를 통해 받은 Pagination Option 을 통해 , 조건에 맞는 Post id[] 를 받는다",
        "description": "게시글 목록 조회 기능\n\nQuery 를 통해 받은 Pagination Option 을 통해 , 조건에 맞는 Post id[] 를 받는다.\n\n@tag post\n@param queryParams\n@returns",
        "x-nestia-namespace": "post.reads",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "post",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "queryParams",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/post/{postId}": {
      "delete": {
        "tags": [
          "post"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "게시글 삭제 기능\n\npostId 를 통해 특정 게시물을 삭제한다",
        "description": "게시글 삭제 기능\n\npostId 를 통해 특정 게시물을 삭제한다.\n\n@tag post\n@param userId\n@param postId\n@returns",
        "x-nestia-namespace": "post.update",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "post",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "userId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "postId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "DELETE"
      },
      "put": {
        "tags": [
          "post"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostProps"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "게시글 수정 기능\n\nBody 를 통해 받은 updatePostProps( title , content ) 를 통해 Post를 수정한다",
        "description": "게시글 수정 기능\n\nBody 를 통해 받은 updatePostProps( title , content ) 를 통해 Post를 수정한다.\n\n@tag post\n@param updatePostProps\n@param userId\n@param postId\n@returns",
        "x-nestia-namespace": "post.update",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "post",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "updatePostProps",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "userId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "postId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "PUT"
      },
      "get": {
        "tags": [
          "post"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase_lt_PostProps_gt_"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "특정 게시글 조회 기능\n\nParam 을 통해 받은 postId 를 통해 , 특정 Post 를 조회한다",
        "description": "특정 게시글 조회 기능\n\nParam 을 통해 받은 postId 를 통해 , 특정 Post 를 조회한다.\n\n@tag post\n@param postId\n@returns",
        "x-nestia-namespace": "post.read",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "post",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "postId",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserProps"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "사용자 회원가입 기능\n\nBody 를 통해 받은 createUserProps( email , password )를 통해 User 를 만든다",
        "description": "사용자 회원가입 기능\n\nBody 를 통해 받은 createUserProps( email , password )를 통해 User 를 만든다.\n\n@tag user\n@param createUserProps\n@returns",
        "x-nestia-namespace": "user.register.create",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "createUserProps",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserProps"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "사용자 로그인 기능\n\nBody 를 통해 받은 loginUserProps( email , password )를 통해 User 를 검증후 , Token 을 반환한다",
        "description": "사용자 로그인 기능\n\nBody 를 통해 받은 loginUserProps( email , password )를 통해 User 를 검증후 , Token 을 반환한다.\n\n@tag user\n@param loginUserProps\n@returns",
        "x-nestia-namespace": "user.login.login",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "loginUserProps",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns"
          }
        ],
        "x-nestia-method": "POST"
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePostProps": {
        "type": "object",
        "properties": {
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "content": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "imageUrl": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "title",
          "content",
          "imageUrl"
        ],
        "x-typia-jsDocTags": []
      },
      "ResponseBase_lt_PostProps_gt_": {
        "type": "object",
        "properties": {
          "status": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          },
          "message": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PostProps"
          }
        },
        "nullable": false,
        "required": [
          "status",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "PostProps": {
        "type": "object",
        "properties": {
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "content": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "imageUrl": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "userId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "title",
          "content",
          "imageUrl",
          "userId"
        ],
        "x-typia-jsDocTags": []
      },
      "PostPaginationDto": {
        "type": "object",
        "properties": {
          "page": {
            "description": "@minimum 0",
            "x-typia-metaTags": [
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "number",
            "minimum": 0
          },
          "limit": {
            "description": "@minimum 0",
            "x-typia-metaTags": [
              {
                "kind": "minimum",
                "value": 0
              }
            ],
            "x-typia-jsDocTags": [
              {
                "name": "minimum",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "number",
            "minimum": 0
          },
          "order": {
            "x-typia-required": false,
            "x-typia-optional": true,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ]
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "Paginated_lt_PostsResult_gt_": {
        "type": "object",
        "properties": {
          "count": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "limit": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "page": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "data": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostsResult"
            }
          }
        },
        "nullable": false,
        "required": [
          "count",
          "limit",
          "page",
          "data"
        ],
        "x-typia-jsDocTags": []
      },
      "PostsResult": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "imageUrl": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "createdAt": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/Pick_lt_GetResult_lt__blt__space_id:_space_string;_space_email:_space_string;_space_password:_space_string;_space_nickname:_space_string;_space_createdAt:_space_Date;_space_updatedAt:_space_Date;_space_refreshToken:_space_string_space__or__space_null;_space__bgt__comma__space_unknown_gt__space__and__space__blt__bgt__comma__space__doublequote_nickname_doublequote__gt_"
          }
        },
        "nullable": false,
        "required": [
          "id",
          "title",
          "imageUrl",
          "createdAt",
          "user"
        ],
        "x-typia-jsDocTags": []
      },
      "Pick_lt_GetResult_lt__blt__space_id:_space_string;_space_email:_space_string;_space_password:_space_string;_space_nickname:_space_string;_space_createdAt:_space_Date;_space_updatedAt:_space_Date;_space_refreshToken:_space_string_space__or__space_null;_space__bgt__comma__space_unknown_gt__space__and__space__blt__bgt__comma__space__doublequote_nickname_doublequote__gt_": {
        "type": "object",
        "properties": {
          "nickname": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "nickname"
        ],
        "x-typia-jsDocTags": []
      },
      "CreateUserProps": {
        "type": "object",
        "properties": {
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "nickname": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "email",
          "password",
          "nickname"
        ],
        "x-typia-jsDocTags": []
      },
      "LoginUserProps": {
        "type": "object",
        "properties": {
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "email",
          "password"
        ],
        "x-typia-jsDocTags": []
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}